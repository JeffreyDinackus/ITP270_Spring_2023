
#Jeffrey Dinackus
#cli problem assignment


---------------------------------------------------------------------
the problem: 

make a file and add 5 rivers to it including the amazon river

use sed to change amazon to ohio

sort the rivers and use uniq and make 3 new files in one line with output redirection
 (there's a command for this)

compare the files to each other
(there's a command for this)
---------------------------------------------------------------------

my solution: 

touch rivers.txt && printf "amazon\npotomac\nmississipi\ntiber\nbask" > rivers.txt && sed -i 's/amazon/ohio/' rivers.txt && cat rivers.txt | sort | uniq | tee rivers1.txt rivers2.txt rivers3.txt && diff rivers1.txt rivers.txt

you can add "&& diff rivers<any of the file numbers>.txt rivers.txt" to compare more files. You can do this as many times as you want. 



professors (with help from ChaptGPT3) solution:

#!/bin/bash

#Shahpar Islam
#ITP270
#CLI Redirection Solution

#Create a file
touch rivers.txt

#Add five river names to it
#Make sure you are adding "amazon river" to the list
echo -e "Amazon River\n" > rivers.txt 
echo -e "Nile River\n"   >> rivers.txt
echo -e "Yangtze River\n" >> rivers.txt
echo -e "Danube River\n" >> rivers.txt 
echo -e "Potomac River\n" >> rivers.txt
echo -e "Potomac River\n" >> rivers.txt

#Replace the word "amazon" with "ohio"
sed 's/Amazon/Ohio/g' rivers.txt > new_rivers.txt 

#Sort the river names alphabetically
sort new_rivers.txt > new_rivers_v2.txt

#Use command to filter out duplicates
uniq new_rivers_v2.txt > new_rivers_v3.txt

#Compare the original file and the modified copy
diff rivers.txt new_rivers_v3.txt


#One-liner
touch rivers.txt && echo -e "Amazon River\nNile River\nYangtze River\nPotomac River\nDanube River\nPotomac River" > rivers.txt && sort rivers.txt | uniq > rivers2.txt | sed 's\Amazon\Ohio\g' rivers2.txt > rivers3.txt  && diff rivers.txt rivers3.txt

